version: '3.9'

services:
  # Postgres Service
  postgres_db:
    container_name: analytics_db
    image: postgres:15.1-alpine
    restart: always
    volumes:
      - postgres_db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: POSTGRES_USER
      POSTGRES_PASSWORD: POSTGRES_SUPERSECRET
      POSTGRES_DB: ANALYTICS_DB

  # Redis Service
  redis:
    container_name: redis_cache
    image: redis:7.0.5-alpine
    restart: always
    volumes:
      - redis:/data
    command: redis-server --save 20 1 --loglevel warning

  # Nginx Service
  nginx:
    container_name: nginx_proxy
    image: nginx:1.22-alpine
    restart: unless-stopped
    volumes:
      - ./nginx/templates/:/etc/nginx/templates
    ports:
      - 3000:80
    env_file:
      - .env
    environment:
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: '.conf'
      API_HOST: dev_api

  # Development Server
  dev_api:
    container_name: development_server
    image: nest-cqrs-api-dev
    restart: always
    command: yarn start:dev
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    build:
      context: .
      target: development
    depends_on:
      - postgres_db
      - redis
      - nginx
    env_file:
      - .env
    environment:
      REDIS_HOST: redis
      PRIMARY_DB_URL: mongodb+srv://BhupenPal:sxct1lhPPL4DYsgy@poc-cluster.un9wmru.mongodb.net/?retryWrites=true&w=majority
      ANALYTICS_DB_URL: postgres://POSTGRES_USER:POSTGRES_SUPERSECRET@postgres_db:5432/ANALYTICS_DB

  # Production Server
  prod_api:
    container_name: production_server
    image: nest-cqrs-api-prod
    restart: always
    build:
      context: .
      target: production

volumes:
  postgres_db: {}
  redis: {}
